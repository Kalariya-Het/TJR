/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HydrogenCredit,
  HydrogenCreditInterface,
} from "../../contracts/HydrogenCredit";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "plantId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "renewableSource",
        type: "string",
      },
    ],
    name: "CreditIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CreditRetired",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CreditTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "plantId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProducerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "creditBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "plantId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "productionTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "renewableSource",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isRetired",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "deactivateProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProducers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractStats",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBatches",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRetired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "producerCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
    ],
    name: "getCreditBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "producer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "plantId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "productionTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "renewableSource",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isRetired",
            type: "bool",
          },
        ],
        internalType: "struct HydrogenCredit.CreditBatch",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "getProducer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "plantId",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "string",
            name: "renewableSource",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalProduced",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registrationTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct HydrogenCredit.Producer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "getProducerBatches",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegisteredProducersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productionTime",
        type: "uint256",
      },
    ],
    name: "issueCredits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "producerBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "producers",
    outputs: [
      {
        internalType: "string",
        name: "plantId",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "renewableSource",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalProduced",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "registrationTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "reactivateProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "plantId",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "renewableSource",
        type: "string",
      },
    ],
    name: "registerProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredProducers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "retireCredits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "retiredCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCreditBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRetiredCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b6338038062002b638339810160408190526200003491620001b8565b8083836003620000458382620002d4565b506004620000548282620002d4565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009181620000a1565b5050600160065550620003a09050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011b57600080fd5b81516001600160401b0380821115620001385762000138620000f3565b604051601f8301601f19908116603f01168101908282118183101715620001635762000163620000f3565b816040528381526020925086838588010111156200018057600080fd5b600091505b83821015620001a4578582018301518183018401529082019062000185565b600093810190920192909252949350505050565b600080600060608486031215620001ce57600080fd5b83516001600160401b0380821115620001e657600080fd5b620001f48783880162000109565b945060208601519150808211156200020b57600080fd5b506200021a8682870162000109565b604086015190935090506001600160a01b03811681146200023a57600080fd5b809150509250925092565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cf57600081815260208120601f850160051c81016020861015620002aa5750805b601f850160051c820191505b81811015620002cb57828155600101620002b6565b5050505b505050565b81516001600160401b03811115620002f057620002f0620000f3565b620003088162000301845462000245565b8462000281565b602080601f831160018114620003405760008415620003275750858301515b600019600386901b1c1916600185901b178555620002cb565b600085815260208120601f198616915b82811015620003715788860151825594840194600190910190840162000350565b5085821015620003905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6127b380620003b06000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a57806395d89b41116100ad578063d91dee3d1161007c578063d91dee3d14610456578063dd62ed3e14610469578063dfe6b5d6146104a2578063e69422be146104ca578063f2fde38b146104ea57600080fd5b806395d89b4114610412578063a9059cbb1461041a578063aab147b21461042d578063d05b9d8e1461044d57600080fd5b80638456cb59116100e95780638456cb59146103ac57806384ba2da0146103b457806389b9ac7f146103da5780638da5cb5b146103ed57600080fd5b806370a0823114610348578063715018a6146103715780637beaddeb146103795780637fd2bab61461039957600080fd5b8063313ce567116101925780634d4cec33116101615780634d4cec33146103125780635c34c2b5146103255780635c975abb1461032e57806368b71e4a1461034057600080fd5b8063313ce567146102d557806337d07bb8146102e45780633f4ba83a146102f757806349eb1134146102ff57600080fd5b80631bc5925c116101ce5780631bc5925c1461026857806323b872dd1461028857806326324eff1461029b5780632c06779d146102c057600080fd5b806306fdde0314610200578063095ea7b31461021e57806318160ddd146102415780631ae9ea8214610253575b600080fd5b6102086104fd565b6040516102159190611f53565b60405180910390f35b61023161022c366004611f89565b61058f565b6040519015158152602001610215565b6002545b604051908152602001610215565b610266610261366004611fb3565b6105a9565b005b610245610276366004611fe6565b600a6020526000908152604090205481565b610231610296366004612001565b610983565b6102ae6102a9366004611fe6565b610a15565b6040516102159695949392919061203d565b6102c8610be6565b6040516102159190612097565b60405160128152602001610215565b6102666102f2366004612187565b610c47565b610266610f41565b61024561030d366004611f89565b610f53565b610266610320366004611fe6565b610f84565b610245600b5481565b600554600160a01b900460ff16610231565b600d54610245565b610245610356366004611fe6565b6001600160a01b031660009081526020819052604090205490565b610266611011565b61038c610387366004612220565b611023565b6040516102159190612239565b6102666103a7366004611fe6565b61124b565b61026661134e565b6103c76103c2366004612220565b61135e565b60405161021597969594939291906122bc565b6102666103e8366004612318565b6114b8565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610215565b61020861161d565b610231610428366004611f89565b61162c565b61044061043b366004611fe6565b6116b9565b604051610215919061235f565b610245600c5481565b6103fa610464366004612220565b6118f6565b6102456104773660046123e4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104aa611920565b604080519485526020850193909352918301526060820152608001610215565b6104dd6104d8366004611fe6565b611946565b6040516102159190612417565b6102666104f8366004611fe6565b6119b2565b60606003805461050c9061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546105389061244f565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b5050505050905090565b60003361059d8185856119f0565b60019150505b92915050565b6105b16119fd565b81600081116105db5760405162461bcd60e51b81526004016105d290612489565b60405180910390fd5b6105e3611a2a565b6001600160a01b03841660009081526007602052604090206005015460ff1661065a5760405162461bcd60e51b815260206004820152602360248201527f50726f6475636572206e6f742072656769737465726564206f7220696e61637460448201526269766560e81b60648201526084016105d2565b428211156106ba5760405162461bcd60e51b815260206004820152602760248201527f50726f64756374696f6e2074696d652063616e6e6f7420626520696e207468656044820152662066757475726560c81b60648201526084016105d2565b6001600160a01b0384166000908152600760205260408120600b805491926106e1836124d4565b9091555050600b546040805160e0810182528281526001600160a01b038816602082015290810186905282546060820190849061071d9061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546107499061244f565b80156107965780601f1061076b57610100808354040283529160200191610796565b820191906000526020600020905b81548152906001019060200180831161077957829003601f168201915b505050505081526020018581526020018360020180546107b59061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546107e19061244f565b801561082e5780601f106108035761010080835404028352916020019161082e565b820191906000526020600020905b81548152906001019060200180831161081157829003601f168201915b5050509183525050600060209182018190528381526008825260409081902083518155918301516001830180546001600160a01b0319166001600160a01b03909216919091179055820151600282015560608201516003820190610892908261253b565b506080820151600482015560a082015160058201906108b1908261253b565b5060c091909101516006909101805460ff19169115159190911790556001600160a01b0386166000908152600960209081526040822080546001810182559083529082200182905560038301805487929061090d9084906125fb565b9091555061091d90508686611a55565b60405161092b90839061260e565b6040518091039020866001600160a01b03167f2cca80eb1b81fb170aa5b7a6a33572f986a0128540929296481908892894840787878660020160405161097393929190612684565b60405180910390a3505050505050565b600081600081116109a65760405162461bcd60e51b81526004016105d290612489565b6109ae611a2a565b60006109bb868686611a8f565b90508015610a0c57604080518581524260208201526001600160a01b0380881692908916917fbfb5ee50772dadda91f100aec2fc71e11bce23172c577323ef2c32d56796f04d910160405180910390a35b95945050505050565b600760205260009081526040902080548190610a309061244f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5c9061244f565b8015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b505050505090806001018054610abe9061244f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aea9061244f565b8015610b375780601f10610b0c57610100808354040283529160200191610b37565b820191906000526020600020905b815481529060010190602001808311610b1a57829003601f168201915b505050505090806002018054610b4c9061244f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b789061244f565b8015610bc55780601f10610b9a57610100808354040283529160200191610bc5565b820191906000526020600020905b815481529060010190602001808311610ba857829003601f168201915b50505050600383015460048401546005909401549293909290915060ff1686565b6060600d80548060200260200160405190810160405280929190818152602001828054801561058557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c20575050505050905090565b610c4f6119fd565b6001600160a01b038416610ca55760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642070726f64756365722061646472657373000000000000000060448201526064016105d2565b6001600160a01b03841660009081526007602052604090206005015460ff1615610d115760405162461bcd60e51b815260206004820152601b60248201527f50726f647563657220616c72656164792072656769737465726564000000000060448201526064016105d2565b6000835111610d625760405162461bcd60e51b815260206004820152601860248201527f506c616e742049442063616e6e6f7420626520656d707479000000000000000060448201526064016105d2565b6000825111610db35760405162461bcd60e51b815260206004820152601860248201527f4c6f636174696f6e2063616e6e6f7420626520656d707479000000000000000060448201526064016105d2565b6000815111610e045760405162461bcd60e51b815260206004820181905260248201527f52656e657761626c6520736f757263652063616e6e6f7420626520656d70747960448201526064016105d2565b6040805160c0810182528481526020808201859052818301849052600060608301819052426080840152600160a08401526001600160a01b038816815260079091529190912081518190610e58908261253b565b5060208201516001820190610e6d908261253b565b5060408201516002820190610e82908261253b565b50606082015160038201556080820151600482015560a0909101516005909101805460ff1916911515919091179055600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b0319166001600160a01b0386169081179091556040517f6d0e48a63beec85ffc13a96b1f4040bb50ced09eaed35c22e22b56355c3811ce90610f339086908690429061271e565b60405180910390a250505050565b610f496119fd565b610f51611ab3565b565b60096020528160005260406000208181548110610f6f57600080fd5b90600052602060002001600091509150505481565b610f8c6119fd565b6001600160a01b03811660009081526007602052604090206005015460ff16610fed5760405162461bcd60e51b815260206004820152601360248201527250726f6475636572206e6f742061637469766560681b60448201526064016105d2565b6001600160a01b03166000908152600760205260409020600501805460ff19169055565b6110196119fd565b610f516000611b08565b61106e6040518060e001604052806000815260200160006001600160a01b03168152602001600081526020016060815260200160008152602001606081526020016000151581525090565b600b5482111580156110805750600082115b6110bf5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818985d18da08125160821b60448201526064016105d2565b600082815260086020908152604091829020825160e0810184528154815260018201546001600160a01b0316928101929092526002810154928201929092526003820180549192916060840191906111169061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546111429061244f565b801561118f5780601f106111645761010080835404028352916020019161118f565b820191906000526020600020905b81548152906001019060200180831161117257829003601f168201915b50505050508152602001600482015481526020016005820180546111b29061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546111de9061244f565b801561122b5780601f106112005761010080835404028352916020019161122b565b820191906000526020600020905b81548152906001019060200180831161120e57829003601f168201915b50505091835250506006919091015460ff16151560209091015292915050565b6112536119fd565b6001600160a01b03811660009081526007602052604090206005015460ff16156112bf5760405162461bcd60e51b815260206004820152601760248201527f50726f647563657220616c72656164792061637469766500000000000000000060448201526064016105d2565b6001600160a01b0381166000908152600760205260409020600401546113275760405162461bcd60e51b815260206004820152601760248201527f50726f6475636572206e6f74207265676973746572656400000000000000000060448201526064016105d2565b6001600160a01b03166000908152600760205260409020600501805460ff19166001179055565b6113566119fd565b610f51611b5a565b600860205260009081526040902080546001820154600283015460038401805493946001600160a01b03909316939192916113989061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546113c49061244f565b80156114115780601f106113e657610100808354040283529160200191611411565b820191906000526020600020905b8154815290600101906020018083116113f457829003601f168201915b50505050509080600401549080600501805461142c9061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546114589061244f565b80156114a55780601f1061147a576101008083540402835291602001916114a5565b820191906000526020600020905b81548152906001019060200180831161148857829003601f168201915b5050506006909301549192505060ff1687565b81600081116114d95760405162461bcd60e51b81526004016105d290612489565b6114e1611a2a565b6114e9611b9d565b3360009081526020819052604090205483111561153f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105d2565b60008251116115895760405162461bcd60e51b8152602060048201526016602482015275526561736f6e2063616e6e6f7420626520656d70747960501b60448201526064016105d2565b6115933384611bc7565b336000908152600a6020526040812080548592906115b29084906125fb565b9250508190555082600c60008282546115cb91906125fb565b909155505060405133907f3656c05df803165785816a6f961d62e1789a861c8eb4add2e70f5a0e5294be4b9061160690869086904290612754565b60405180910390a26116186001600655565b505050565b60606004805461050c9061244f565b6000816000811161164f5760405162461bcd60e51b81526004016105d290612489565b611657611a2a565b60006116638585611bfd565b905080156116b157604080518581524260208201526001600160a01b0387169133917fbfb5ee50772dadda91f100aec2fc71e11bce23172c577323ef2c32d56796f04d910160405180910390a35b949350505050565b6116f46040518060c0016040528060608152602001606081526020016060815260200160008152602001600081526020016000151581525090565b6001600160a01b03821660009081526007602052604090819020815160c081019092528054829082906117269061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546117529061244f565b801561179f5780601f106117745761010080835404028352916020019161179f565b820191906000526020600020905b81548152906001019060200180831161178257829003601f168201915b505050505081526020016001820180546117b89061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546117e49061244f565b80156118315780601f1061180657610100808354040283529160200191611831565b820191906000526020600020905b81548152906001019060200180831161181457829003601f168201915b5050505050815260200160028201805461184a9061244f565b80601f01602080910402602001604051908101604052809291908181526020018280546118769061244f565b80156118c35780601f10611898576101008083540402835291602001916118c3565b820191906000526020600020905b8154815290600101906020018083116118a657829003601f168201915b5050509183525050600382015460208201526004820154604082015260059091015460ff16151560609091015292915050565b600d818154811061190657600080fd5b6000918252602090912001546001600160a01b0316905081565b60008060008061192f60025490565b600b54600c54600d54929791965094509092509050565b6001600160a01b0381166000908152600960209081526040918290208054835181840281018401909452808452606093928301828280156119a657602002820191906000526020600020905b815481526020019060010190808311611992575b50505050509050919050565b6119ba6119fd565b6001600160a01b0381166119e457604051631e4fbdf760e01b8152600060048201526024016105d2565b6119ed81611b08565b50565b6116188383836001611c0b565b6005546001600160a01b03163314610f515760405163118cdaa760e01b81523360048201526024016105d2565b600554600160a01b900460ff1615610f515760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b038216611a7f5760405163ec442f0560e01b8152600060048201526024016105d2565b611a8b60008383611ce1565b5050565b600033611a9d858285611e0b565b611aa8858585611e84565b506001949350505050565b611abb611ee3565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611b62611a2a565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611aeb3390565b600260065403611bc057604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b038216611bf157604051634b637e8f60e11b8152600060048201526024016105d2565b611a8b82600083611ce1565b60003361059d818585611e84565b6001600160a01b038416611c355760405163e602df0560e01b8152600060048201526024016105d2565b6001600160a01b038316611c5f57604051634a1406b160e11b8152600060048201526024016105d2565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015611cdb57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611cd291815260200190565b60405180910390a35b50505050565b6001600160a01b038316611d0c578060026000828254611d0191906125fb565b90915550611d7e9050565b6001600160a01b03831660009081526020819052604090205481811015611d5f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105d2565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611d9a57600280548290039055611db9565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611dfe91815260200190565b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611cdb5781811015611e7557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105d2565b611cdb84848484036000611c0b565b6001600160a01b038316611eae57604051634b637e8f60e11b8152600060048201526024016105d2565b6001600160a01b038216611ed85760405163ec442f0560e01b8152600060048201526024016105d2565b611618838383611ce1565b600554600160a01b900460ff16610f5157604051638dfc202b60e01b815260040160405180910390fd5b6000815180845260005b81811015611f3357602081850181015186830182015201611f17565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611f666020830184611f0d565b9392505050565b80356001600160a01b0381168114611f8457600080fd5b919050565b60008060408385031215611f9c57600080fd5b611fa583611f6d565b946020939093013593505050565b600080600060608486031215611fc857600080fd5b611fd184611f6d565b95602085013595506040909401359392505050565b600060208284031215611ff857600080fd5b611f6682611f6d565b60008060006060848603121561201657600080fd5b61201f84611f6d565b925061202d60208501611f6d565b9150604084013590509250925092565b60c08152600061205060c0830189611f0d565b82810360208401526120628189611f0d565b905082810360408401526120768188611f0d565b606084019690965250506080810192909252151560a0909101529392505050565b6020808252825182820181905260009190848201906040850190845b818110156120d85783516001600160a01b0316835292840192918401916001016120b3565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261210b57600080fd5b813567ffffffffffffffff80821115612126576121266120e4565b604051601f8301601f19908116603f0116810190828211818310171561214e5761214e6120e4565b8160405283815286602085880101111561216757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561219d57600080fd5b6121a685611f6d565b9350602085013567ffffffffffffffff808211156121c357600080fd5b6121cf888389016120fa565b945060408701359150808211156121e557600080fd5b6121f1888389016120fa565b9350606087013591508082111561220757600080fd5b50612214878288016120fa565b91505092959194509250565b60006020828403121561223257600080fd5b5035919050565b602081528151602082015260018060a01b036020830151166040820152604082015160608201526000606083015160e0608084015261227c610100840182611f0d565b9050608084015160a084015260a0840151601f198483030160c08501526122a38282611f0d565b91505060c0840151151560e08401528091505092915050565b87815260018060a01b038716602082015285604082015260e0606082015260006122e960e0830187611f0d565b85608084015282810360a08401526123018186611f0d565b91505082151560c083015298975050505050505050565b6000806040838503121561232b57600080fd5b82359150602083013567ffffffffffffffff81111561234957600080fd5b612355858286016120fa565b9150509250929050565b602081526000825160c0602084015261237b60e0840182611f0d565b90506020840151601f19808584030160408601526123998383611f0d565b92506040860151915080858403016060860152506123b78282611f0d565b91505060608401516080840152608084015160a084015260a0840151151560c08401528091505092915050565b600080604083850312156123f757600080fd5b61240083611f6d565b915061240e60208401611f6d565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156120d857835183529284019291840191600101612433565b600181811c9082168061246357607f821691505b60208210810361248357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600182016124e6576124e66124be565b5060010190565b601f82111561161857600081815260208120601f850160051c810160208610156125145750805b601f850160051c820191505b8181101561253357828155600101612520565b505050505050565b815167ffffffffffffffff811115612555576125556120e4565b61256981612563845461244f565b846124ed565b602080601f83116001811461259e57600084156125865750858301515b600019600386901b1c1916600185901b178555612533565b600085815260208120601f198616915b828110156125cd578886015182559484019460019091019084016125ae565b50858210156125eb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156105a3576105a36124be565b600080835461261c8161244f565b60018281168015612634576001811461264957612678565b60ff1984168752821515830287019450612678565b8760005260208060002060005b8581101561266f5781548a820152908401908201612656565b50505082870194505b50929695505050505050565b83815260006020848184015260606040840152600084546126a48161244f565b80606087015260806001808416600081146126c657600181146126e05761270e565b60ff1985168984015283151560051b89018301955061270e565b896000528660002060005b858110156127065781548b82018601529083019088016126eb565b8a0184019650505b50939a9950505050505050505050565b6060815260006127316060830186611f0d565b82810360208401526127438186611f0d565b915050826040830152949350505050565b83815260606020820152600061276d6060830185611f0d565b905082604083015294935050505056fea2646970667358221220e456552720ee6ed6ad2f38898eb615075bf16e2042eb32758b5cb96f11fb6d2d64736f6c63430008140033";

type HydrogenCreditConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HydrogenCreditConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HydrogenCredit__factory extends ContractFactory {
  constructor(...args: HydrogenCreditConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, initialOwner, overrides || {}) as Promise<
      HydrogenCredit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HydrogenCredit__factory {
    return super.connect(runner) as HydrogenCredit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HydrogenCreditInterface {
    return new Interface(_abi) as HydrogenCreditInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HydrogenCredit {
    return new Contract(address, _abi, runner) as unknown as HydrogenCredit;
  }
}
